"" Vimrc by udiboy
set nocompatible " be iMproved
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" vim-airline
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

Plugin 'tpope/vim-fugitive'

Plugin 'easymotion/vim-easymotion'

Plugin 'gu-fan/simpleterm.vim'

Plugin 'Shougo/deoplete.nvim'
Plugin 'roxma/nvim-yarp'
Plugin 'roxma/vim-hug-neovim-rpc'
Plugin 'zchee/deoplete-jedi'
Plugin 'Shougo/neco-syntax'

call vundle#end()            " required
filetype plugin indent on    " required


let mapleader=","

" File options
syntax on
set nobackup
set writebackup
set backupdir=~/.cache/vim
set encoding=utf-8

" Cmd options
set wildmenu
set showcmd

" Display options
set hlsearch
set cmdheight=1
set laststatus=2
set t_vb=

" Editor options
set autoindent
set nostartofline
set confirm
set number relativenumber

set backspace=indent,eol,start

set shiftwidth=4
set softtabstop=4
set expandtab

" Window options
set splitbelow
set splitright

" Colors
set fillchars=vert:â”‚
highlight VertSplit cterm=none
highlight Pmenu ctermbg=gray guibg=gray
highlight PmenuSel ctermbg=blue guibg=blue
set background=dark

" Airline options
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme = 'term'
set noshowmode

" Deoplete options
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_smart_case = 1
let g:deoplete#auto_completion_start_length = 2
let g:deoplete#manual_completion_start_length = 0

" Mappings

map <Leader><CR> :nohl<CR>
imap <Leader>c <C-P>

noremap! <Leader><Leader> <Esc>
noremap <Leader> <Esc>

noremap <Leader>y "+y
noremap <Leader>p "+p

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>

" Easymotion shortcuts
let g:EasyMotion_do_mapping = 0
let g:EasyMotion_smartcase = 1
nmap <Leader>s <Plug>(easymotion-overwin-f2)
map <Leader>j <Plug>(easymotion-j)
map <Leader>h <Plug>(easymotion-F)
map <Leader>l <Plug>(easymotion-f)
map <Leader>k <Plug>(easymotion-k)

" Buffer switching
nnoremap <Leader>i :bprev<CR>
nnoremap <Leader>o :bnext<CR>

" Simpleterm shortcuts
nnoremap <Leader>tw :Sshow<CR>
nnoremap <Leader>tt :Stoggle<CR>
nnoremap <Leader>td :Scd<CR>

nnoremap <Leader>te :Sexe<Space>

tnoremap <Esc> <C-\><C-n>


" Remove trailing whitespace
nnoremap <Leader><Space> :%s/\s\+$//e<CR>
